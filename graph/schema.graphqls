scalar Time
scalar Upload

enum UserType {
  ADMIN
  PRO
  USER
}

type Query {
  student(id:ID!): Student
  students(limit: Int!): [Student!]
}

type Mutation {
  addOrUpdateStudent(input: StudentInput!): Student!
}

interface User {
  name: String!
  id: ID!
  role: UserType!
  created_at: Time!
  updated_at: Time!
}

type Student implements User {
  name: String!
  id: ID!
  age: Int!
  gpa: Float!
  passions: [String!]
  is_premium: Boolean!
  role: UserType!
  created_at: Time!
  updated_at: Time!
  competences: [Competence!]
}

input StudentInput {
  name: String!
  id: String
  age: Int!
  gpa: Float!
  passions: [String!]
  is_premium: Boolean
  role: UserType
  created_at: Time
  updated_at: Time
}

type Competence {
  name: String!
}

type CompetenceInput {
  name: String!
}